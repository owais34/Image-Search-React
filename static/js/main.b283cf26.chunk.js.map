{"version":3,"sources":["components/navbar/Navbar.js","components/image-results/ImageResults.js","components/search/Search.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","bigImage","border","ImageResults","imageListContent","images","useState","open","currImg","state","setstate","GridList","cellHeight","map","img","GridListTile","key","id","src","largeImageURL","alt","type","GridListTileBar","tags","subtitle","user","actionIcon","onClick","url","Dialog","onClose","Search","searchText","amount","apiUrl","apiKey","TextField","name","value","onChange","e","target","label","fullWidth","style","margin","Select","labelId","MenuItem","Button","length","axios","get","then","res","data","hits","catch","err","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b283cf26.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\n// import Button from '@material-ui/core/Button'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\nfunction Navbar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n        <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Pixabay Image Finder\n          </Typography>\n          \n        </Toolbar>\n      </AppBar>\n      </div>\n    )\n}\n\nexport default Navbar","import React, { useState } from 'react'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport IconButton from '@material-ui/core/IconButton'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\n// import Dialog from '@material-ui/core/Dialog'\n// import FlatButton from '@material-ui/core/'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport {makeStyles} from '@material-ui/core/styles'\nimport { Dialog } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      width: 900,\n      height: 750,\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    },\n    bigImage:{\n      border: '10px solid white'\n    }\n  }));\n\nfunction ImageResults({images}) {\n    let imageListContent;\n    const classes=useStyles()\n  const [state, setstate] = useState({open:false,currImg:''})\n\n  const onOpenDialog=(url,ht,wd)=>{\n    setstate({open:true,currImg:url})\n  }\n  const onCloseDialog=()=>{\n    setstate({open:false,currImg:''})\n  }\n    if(images){\n        imageListContent=(\n            <div className={classes.root}>\n      <GridList cellHeight={400} className={classes.gridList}>\n        {images.map((img) => (\n          <GridListTile key={img.id}>\n            <img src={img.largeImageURL} alt={img.type} />\n            <GridListTileBar\n              title={img.tags}\n              subtitle={<span>by: {img.user}</span>}\n              actionIcon={\n                <IconButton aria-label={`view full image`} className={classes.icon} \n                onClick={()=>onOpenDialog(img.largeImageURL)}>\n                  <ZoomIn />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n        )\n    }\n    else\n    {\n        imageListContent=null\n    }\n    return (\n        <div>\n            {imageListContent}\n            <Dialog open={state.open} onClose={onCloseDialog} >\n              <img src={state.currImg} alt=\"\" \n              className={classes.bigImage} \n              />\n            </Dialog>\n        </div>\n    )\n}\n\nexport default ImageResults","import React,{useState} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport axios from 'axios'\nimport { Button } from '@material-ui/core';\nimport ImageResults from '../image-results/ImageResults';\n\n\nfunction Search() {\n    const [state, setstate] = useState({searchText:'',\n    amount:15,\n    apiUrl:'https://pixabay.com/api',\n    apiKey:'17972173-37f0b4b0df2f178bd635c4a2d',\n    images:[]\n})\n\n// useEffect(() => {\n//     //effect\n//     if(state.searchText.length!==0)\n//     {axios.get(`${state.apiUrl}/?key=${state.apiKey}&q=${state.searchText}&image_type=photo&\n//     per_page=${state.amount}&safesearch=true`)\n//     .then(res=>setstate({...state,images:res.data.hits}))\n//     .catch(err=>console.log(err))}\n    \n// }, [state])\nconst onTextChange =(e)=>{\n    setstate({...state,searchText:e.target.value})\n}\nconst onAmountChange=(e)=>{\n    setstate({...state,amount:e.target.value})\n\n}\nconst onClick=()=>{\n    if(state.searchText.length!==0)\n    {axios.get(`${state.apiUrl}/?key=${state.apiKey}&q=${state.searchText}&image_type=photo&per_page=${state.amount}&safesearch=true`)\n    .then(res=>setstate({...state,images:res.data.hits}))\n    .catch(err=>console.log(err))}\n}\n    return (\n        <div>\n            <TextField\n            name=\"searchText\"\n            value={state.searchText}\n            onChange={onTextChange}\n            label=\"Search for images\"\n            fullWidth={true}\n            style={{margin:10}}\n            />\n            <br/><br/>\n            <Select\n            name=\"amount\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={state.amount}\n            onChange={onAmountChange}\n            style={{margin:10}}\n            >\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={15}>15</MenuItem>\n          <MenuItem value={30}>30</MenuItem>\n          <MenuItem value={50}>50</MenuItem>\n        </Select>\n        <br/><br/>\n        <Button onClick={onClick} style={{backgroundColor:'lightblue'}}>Search</Button>\n        <br/><br/>\n        {(state.images.length>0)?(<ImageResults images={state.images}/>): null}\n        </div>\n    )\n}\n\nexport default Search","import React from 'react';\nimport './App.css';\nimport Navbar from './components/navbar/Navbar';\nimport Search from './components/search/Search'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}